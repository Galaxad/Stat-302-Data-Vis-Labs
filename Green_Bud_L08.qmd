---
title: "L08 Coords"
subtitle: "Data Visualization (STAT 302)"
author: "Bud Green"
pagetitle: "L08 Bud Green"
date: today

format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    fig-dpi: 300

execute:
  warning: false

from: markdown+emoji 
---


## Overview

The goal of this lab is to use an alternative coordinate system in `ggplot2` to build a plot. 

## Dataset

We'll be using the `mod_nba_adv_stats_2023_24.txt` dataset --- add to your project's `/data` subdirectory. The `mod_nba_adv_stats_2023_24_codebook.txt` provides a quick description of the variables in the dataset --- suggest adding it to the `/data` subdirectory as well. 

```{r warning = FALSE, message= FALSE}
#| label: load-pkgs-data

# load package(s)
library(tidyverse)
library(patchwork)

# load data
nba_data <- read_delim(file = "data/mod_nba_adv_stats_2023_24.txt", delim = "|")
nba_codebook <- read_delim(file = "data/mod_nba_adv_stats_2023_24_codebook.txt", delim = ": ")

```

## Exercise 

<!-- See the html instructions since they are complete with images and are the official instructions. -->
<!-- this is a q markdown comment, it won't show up in the final code. ctrl + shift + c will do/undo the line -->

Using the `mod_nba_adv_stats_2023_24.txt` dataset we will try to recreate/approximate the plot type featured in the [FiveThirtyEight](http://fivethirtyeight.com/) article [Kawhi Leonard Is The Most Well-Rounded Elite Shooter Since Larry Bird](http://fivethirtyeight.com/features/kawhi-leonard-is-the-most-well-rounded-elite-shooter-since-larry-bird/) for any player of your choice for the 2023-2024 season. 

:::{.callout-note icon=false}

## Goal

Replicate the graphic below as closely as possible --- see instructions for image.

:::

### Start with data wrangling

When data wrangling we will need a helper function for creating the quartiles for players. Additionally, it will be useful to exclude players that played less than 10 games or played less than 5 minutes a game. That is, we only want to include "qualified" players.

```{r}
#| label: helper-function

# Returns quartile rank
quartile_rank <- function(x = 0:99) {
  # Set quartile - this is making a list of -infinity, .25, .50, .75, and +infinity
  quart_breaks <- c(
    -Inf,
    quantile(x,
      probs = c(.25, .5, .75),
      na.rm = TRUE
    ),
    Inf
  )
  cut(x = x, breaks = quart_breaks, labels = FALSE)
}
```

:::{.callout-important}
**Add comments to** the code below where indicated. The added comments should concisely describe what the following line(s) of code do in the data wrangling process
:::

::: {.callout-tip icon=false}

## Solution

```{r}
#| label: data-wrangling

# Graphical data
nba_graph_data <- nba_data |> 
  #nba_graph_data is made. Adds players from nba_data that meet the filter - bouncer
  #Both of the arguments are being used to filter, so it's an AND operation
  filter(g >= 10, mp / g >= 5) |> 
  #takes all values in selected column in nba_data and applies quartile_rank function
  #only using the filtered data to determine the quantile
  mutate(
    ts_quant = quartile_rank(ts_percent),
    trb_quant = quartile_rank(trb_percent),
    dbpm_quant = quartile_rank(dbpm),
    ast_quant = quartile_rank(ast_percent),
    usg_quant = quartile_rank(usg_percent)
  ) |>
  #this is matching each qualifying to the stats that we renamed to have "_quant" in the name, it's like a second filter
  select(player, contains("_quant")) |> 
  #uses filtered stats and players
  #takes the "_quant" stats and puts them in a column called "variable"
  #finds the quantile value for player in stat and puts into new column "value"
  #end result is 3 columns
  #each player has 5 rows - one for each category
  pivot_longer(
    cols = -player, 
    names_to = "variable", 
    values_to = "value"
    ) |> 
  #acutally transforms nba_data into nba_graph_data
  #puts player column in alphabetical order
  arrange(player)
```

:::

### Build the plot

*Hints:*

- Image width is 8 in, height is 10 in --- use code chunk yaml
- center the image output --- use code chunk yaml
- shrink size down for display to 50% width --- use code chunk yaml
- All added text, except title, is done with `annotate()`
- set `axis.text` to blank in theme
- size 3 and 5 could be useful

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: skills-chart-base
#| fig-width: 8
#| fig-height: 10
#| out-width: "50%"
#| fig-align: "center"

#player data

player_name <- c("Anthony Edwards")
nba_graph_data %>% 
  filter(player == player_name) %>%
  ggplot(aes(x = variable, y = value)) +
  geom_col(width = 1, fill = "#F07786") +
  geom_hline(yintercept = seq(1, 4, 1), linetype = "dotted") +
  geom_segment(
    x = 0.5:4.5,
    y = 0,
    xend = 0.5:4.5,
    yend = 4,
  ) +
  scale_x_discrete(
    name = NULL,
    limits = c("ts_quant", "usg_quant", "dbpm_quant", "trb_quant", "ast_quant"),
    expand = c(0, 0)
  ) +
  scale_y_continuous(
    expand = c(0, 0)
  ) +
  theme(
    axis.text = element_blank(),
    axis.title = element_blank()
  ) +
  coord_polar() +
  ggtitle(str_c(player_name, "(2024)", sep = "\n")) +
  
  #sector labels
  annotate(
    geom = "text",
    label = c(
      "TRUE\nSHOOTING",
      "USAGE\nRATE",
      "DEFENSIVE\nBPM",
      "REBOUND\nRATE",
      "ASSIST\nRATE"
    ),
    x = seq(1, 5, 1),
    y = 5,
    size = 5
  ) +
  #quantile labels
  annotate(
    geom = "text",
    label = c("1st-25th", "25th-50th", "50th, 75th", "75th-99th"),
    x = 3,
    y = seq(0.7, 3.7, 1),
    size = 3
  )
```


:::

## Challenge

:::{.callout-important icon=false}

Challenge is optional for all students, but we recommend trying them out!

:::

<!-- See the html instructions since they are complete with images and are the official instructions. -->

Continue the work of trying to recreate the graphic from the article. Your final plot should look as follows:

::: {.callout-tip icon=false}
## Solution

```{r}
#| label: challenge
#| fig-width: 8
#| fig-height: 10
#| out-width: "50%"
#| fig-align: "center"


#making a function
#name := name of qualifying player from 2023-2024 season
player_skill_chart <- function(name = "Anthony Edwards") {
  player_name <- name
  
  #build skill chart
  nba_graph_data %>% 
    filter(player == player_name) %>%
    ggplot(aes(x = variable, y = value)) +
    geom_col(width = 1, fill = "#F07786") +
    geom_hline(yintercept = seq(1, 4, 1), linetype = "dotted") +
    geom_segment(
      x = 0.5:4.5,
      y = 0,
      xend = 0.5:4.5,
      yend = 4,
    ) +
    scale_x_discrete(
      name = NULL,
      limits = c(
        "ts_quant",
        "usg_quant",
        "dbpm_quant",
        "trb_quant",
        "ast_quant"
      ),
      expand = c(0, 0)
    ) +
    scale_y_continuous(
      expand = c(0, 0)
    ) +
    theme(
      axis.text = element_blank(),
      axis.title = element_blank(),
      axis.ticks = element_blank(),
      panel.grid = element_blank(),
      plot.title = element_text(hjust = 0.5, size = 24)
    ) +
    coord_polar() +
    ggtitle(str_c(player_name, "(2024)", sep = "\n")) +
    
    #sector labels
    annotate(
      geom = "text",
      label = c(
        "TRUE\nSHOOTING",
        "USAGE\nRATE",
        "DEFENSIVE\nBPM",
        "REBOUND\nRATE",
        "ASSIST\nRATE"
      ),
      x = seq(1, 5, 1),
      y = 5,
      size = 5
    ) +
    #quantile labels
    annotate(
      geom = "text",
      label = c("1st-25th", "25th-50th", "50th-75th", "75th-99th"),
      x = 3,
      y = seq(0.7, 3.7, 1),
      size = 3
    )
}

#test function
player_skill_chart()
```

```{r}
#| label: challenge-compare
#| fig-width: 8
#| fig-height: 10
#| code-fold: false
#| results: hold

#NBA MVP Finalists
player_skill_chart("Nikola Jokić")
player_skill_chart("Luka Dončić")
player_skill_chart("Shai Gilgeous-Alexander")
```

:::